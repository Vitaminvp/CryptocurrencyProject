{"version":3,"sources":["components/D3/ResponsiveWrapper/index.js","components/Price/Form/Btn/Btn.js","components/Price/Form/selectOption/select.js","components/Price/Form/AddItemForm.js","constants.js","components/Modal.js","components/Price/HOC/listTransformation.js","components/Price/Coin/Coin.jsx","components/Chart/LineChart.js","components/D3/Axis/index.js","components/D3/Axes/index.js","components/D3/Bars/index.js","components/D3/Chart/index.js","components/History/RadioButtons/RadioButtons.js","components/History/History.jsx","components/News/Pagination/index.js","components/Coins/SearchInput.js","components/Price/CoinAmount/ErrorSpan/index.js","components/News/index.js","components/Coins/Pagination/Card.js","components/Coins/Pagination/index.js","components/Coins/Coins.jsx","components/Chart/BarChart.js","components/Chart/PieChart.js","components/Chart/DoughnutChart.js","components/Exchange/Exchange.jsx","components/Price/CoinAmount/CoinAmount.jsx","AC/sagaCurrency.js","components/Price/CurrencyAmount/CurrencyAmount.jsx","components/Price/Currency/Currency.jsx","components/ErrorBoundary.js","AC/index.js","components/Price/Price.jsx","components/404.jsx","components/TopMenu/TopMenu.jsx","App.js","serviceWorker.js","redusers/currencyAll.js","redusers/setCoinsList.js","redusers/setFilteredCoinsList.js","redusers/getCoins.js","redusers/setCurrencyList.js","redusers/getCurrency.js","redusers/index.js","redusers/counter.js","redusers/currentCurrency.js","redusers/currentCoin.js","store/index.js","index.js"],"names":["ChartComponent","Btn","_ref","classN","children","disabled","react_default","a","createElement","type","value","className","SelectOpt","Name","this","props","Component","AddItemForm","onChange","onSubmit","coins","list","isCoin","e","target","filter","coin","every","lst","map","item","selectOption_select","key","Id","Form_Btn_Btn","CRYPTO_COMPARE_URL_CUR","INCREMENT","CURRENCY","CURRENTCURRENCY","CURRENTCOIN","SETLIST","ADDTOLIST","SETCLIST","FILTEREDCOINSLIST","ADDTOCLIST","REQUEST_CURRENCY_LIST","modalRoot","document","getElementById","Modal","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","el","appendChild","removeChild","ReactDOM","createPortal","React","WrappedComponent","OriginalComponent","items","amount","listToMap","element","length","undefined","itm","slicedToArray","coinFromList","elem","assign","Coin","toggleModal","setState","showModal","state","handleClick","preventDefault","handleDelete","_this$props","coinCarrency","currencyTitle","includes","modal","components_Modal","src","concat","ImageUrl","alt","CoinName","onClick","Fragment","slice","href","LineChart","react_chartjs_2_es","data","dataSet","width","height","options","annotation","annotations","drawTime","borderColor","borderDash","borderWidth","mode","scaleID","label","backgroundColor","fontFamily","fontSize","fontStyle","fontColor","textAlign","xPadding","yPadding","cornerRadius","position","enabled","content","maintainAspectRation","Axis","renderAxis","axisType","orient","axis","d3Axis","scale","tickSize","tickPadding","ticks","d3Select","axisElement","ref","transform","translate","Axes","scales","margins","svgDimensions","xProps","xScale","bottom","top","yProps","yScale","left","right","D3_Axis_Axis","Bars","colorScale","scaleLinear","domain","maxValue","range","interpolate","interpolateLab","_this2","bars","datum","title","x","y","bandwidth","fill","Chart","scaleBand","Math","max","parentWidth","apply","toConsumableArray","d","padding","Bars_Bars","ResponsiveWrapper","_Component","ResponsiveChart","containerWidth","fitParentContainer","bind","assertThisInitialized","inherits","createClass","window","addEventListener","removeEventListener","currentContainerWidth","chartContainer","getBoundingClientRect","shouldRenderChart","renderChart","RadioButtons","handleCurrentData","id","name","defaultChecked","htmlFor","HistoryComponent","handleToggleBtn","itemName","toggleBtn","currentData","handleChange","isActBtnCur","currentCurrency","currentCoin","handleSubmit","event","_this$state","current","currencyList","fetchData","filterForDelete","_this$state2","dataDay","dataHour","dataMinute","newData","String","objectSpread","isActBtnCoin","dataD3","_this$state3","fetch","then","res","json","posts","arrOfPosts","Data","defineProperty","_this3","moment","time","format","volume","_this$state4","currencyAll","arrOfData","keys","chartData","labels","datasets","i","j","push","high","splice","History_RadioButtons_RadioButtons","Form_AddItemForm","Price_Coin_Coin","Chart_LineChart","D3_Chart","History","connect","Pagination","setPage","page","pageSize","pager","totalPages","getPager","pageOfItems","startIndex","endIndex","handlePager","onChangePage","initialPage","prevProps","prevState","totalItems","currentPage","startPage","endPage","ceil","min","pages","Array","index","defaultProps","SearchInput","isValid","handleSearchChange","searchTerm","placeholder","ErrorSpan","NewsComponent","filterListBySearchTerm","toLowerCase","search","articles","filteredArticles","CoinAmount_ErrorSpan","Coins_SearchInput","News_Pagination","post","guid","rel","imageurl","Date","published_on","toLocaleDateString","source","body","Card","card","react","Algorithm","FullName","PreMinedValue","SmartContractAddress","SortOrder","TotalCoinSupply","TotalCoinsFreeFloat","CoinsComponent","filteredCoins","setTimeout","Coins_Pagination","Pagination_Card","Coins","filteredCoinsList","BarChart","labelsSet","PieChart","maintainAspectRatio","DoughnutChart","ExchangeComponent","toUpperCase","Exchanges","MARKET","LASTVOLUMETO","LASTTRADEID","FROMSYMBOL","TOSYMBOL","PRICE","VOLUME24HOUR","Chart_BarChart","Chart_PieChart","Chart_DoughnutChart","Exchange","CoinAmount","handleCoinsChangeAmount","test","_this$props2","Spn","defaultValue","getCurrencyList","currencySaga","receiveCurrencyListAction","currencyRate","payload","errorCurrencyListAction","err","action","responce","regenerator_default","wrap","_context","prev","next","nameToUpper","currensyNames","sent","put","t0","stop","_marked","_context2","takeEvery","_marked2","CurrencyAmountComponent","_isMounted","currencyNames","join","requestCurrencyListAction","currencySimbol","style","color","toFixed","react_addons_css_transition_group_default","transitionName","transitionAppear","transitionAppearTimeout","transitionEnter","transitionLeave","LASTMARKET","HIGH24HOUR","OPEN24HOUR","currensy","mapDispatchToProps","CurrencyAmount","ErrorBoundary","error","errorInfo","whiteSpace","toString","componentStack","PriceComponent","setLocalState","localList","coinsList","localCurList","localStorage","setItem","JSON","stringify","getLocalState","setCurrentCoin","setCurrentCurrency","addToCoinsList","addToCurrencyList","setCoinsList","setCurrencyList","split","match","params","parseInt","location","pathname","url","history","pushState","handleSetState","components_ErrorBoundary","Price_CoinAmount_CoinAmount","Price_Currency_Currency","CurrencyAmount_CurrencyAmount","setCurrencyNameAll","Price","ForOFor","TopMenu","NavLink","to","activeClassName","exact","AppComponent","getItem","parse","strCoinsList","strCurrencyList","getCoinsList","repo","BrowserRouter","base-name","Route","render","components_TopMenu_TopMenu","react_transition_group","classNames","timeout","Switch","path","component","Price_Price","dispatch","catch","errorCoinsListAction","App","Boolean","hostname","initialCurrency","initialSetList","initialFilteredSetList","initialState","initialSetCList","combineReducers","counter","count","arguments","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","enhancer","applyMiddleware","thunk","store","createStore","reducers","run","es","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ae83bb8f.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default ChartComponent => (\r\n    class ResponsiveChart extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n\r\n            this.state = {\r\n                containerWidth: null,\r\n            };\r\n\r\n            this.fitParentContainer = this.fitParentContainer.bind(this)\r\n        }\r\n\r\n        componentDidMount() {\r\n            this.fitParentContainer();\r\n            window.addEventListener('resize', this.fitParentContainer)\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            window.removeEventListener('resize', this.fitParentContainer)\r\n        }\r\n\r\n        fitParentContainer() {\r\n            const { containerWidth } = this.state;\r\n            const currentContainerWidth = this.chartContainer\r\n                .getBoundingClientRect().width;\r\n\r\n            const shouldResize = containerWidth !== currentContainerWidth;\r\n\r\n            if (shouldResize) {\r\n                this.setState({\r\n                    containerWidth: currentContainerWidth,\r\n                })\r\n            }\r\n        }\r\n\r\n        renderChart() {\r\n            const parentWidth = this.state.containerWidth;\r\n\r\n            return (\r\n                <ChartComponent {...this.props} parentWidth={parentWidth} />\r\n            )\r\n        }\r\n\r\n        render() {\r\n            const { containerWidth } = this.state;\r\n            const shouldRenderChart = containerWidth !== null;\r\n\r\n            return (\r\n                <div\r\n                    ref={(el) => { this.chartContainer = el }}\r\n                    className=\"Responsive-wrapper\"\r\n                >\r\n                    {shouldRenderChart && this.renderChart()}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n)\r\n","import React from 'react';\r\nimport './Btn.css';\r\n\r\nconst Btn = ({classN, children, disabled}) => <input type=\"submit\" value={children} disabled={disabled} className={classN}/>;\r\n\r\n\r\nexport default Btn;\r\n\r\n","import React, {Component} from 'react';\r\n\r\nclass SelectOpt extends Component {\r\n    render() {\r\n        const {Name} = this.props;\r\n        return <option value={Name}>{Name}</option>;\r\n    }\r\n}\r\n\r\nexport default SelectOpt;\r\n","import React from 'react';\r\nimport Btn from \"./Btn/Btn\";\r\nimport SelectOpt from \"./selectOption/select\";\r\n\r\nconst AddItemForm = ({value, onChange, onSubmit, coins, list, disabled, children, isCoin}) =>\r\n    <form onSubmit={(e) => onSubmit(e, isCoin)}>\r\n        <label>\r\n            <i>{children}:&nbsp;</i>\r\n            <select value={value} onChange={(e) => onChange(e.target.value, isCoin)} className=\"coinSelect\">\r\n                <option value=\"\">&nbsp;</option>\r\n                {coins.filter(coin => list.every(lst => lst.Name !== coin.Name)).map(item => <SelectOpt\r\n                    Name={item.Name}\r\n                    key={item.Id}/>)}\r\n            </select>\r\n        </label>\r\n        <Btn disabled={disabled} classN=\"submitBtn\">Add</Btn>\r\n    </form>;\r\n\r\nexport default AddItemForm;\r\n\r\n","export const CRYPTO_COMPARE_URL = 'https://www.cryptocompare.com/';\r\nexport const CRYPTO_COMPARE_URL_ALL = 'https://min-api.cryptocompare.com/data/all/coinlist';\r\n// export const CRYPTO_COMPARE_URL_CUR = 'https://min-api.cryptocompare.com/data/price?fsym=';\r\nexport const CRYPTO_COMPARE_URL_CUR = 'https://min-api.cryptocompare.com/data/pricemultifull?fsyms=';\r\nexport const COINS_NUM = 245;\r\nexport const INCREMENT = 'INCREMENT';\r\nexport const CURRENCY = 'CURRENCY';\r\nexport const CURRENTCURRENCY = 'CURRENTCURRENCY';\r\nexport const CURRENTCOIN = 'CURRENTCOIN';\r\nexport const SETLIST = 'SETLIST';\r\nexport const ADDTOLIST = 'ADDTOLIST';\r\nexport const DELFROMLIST = 'DELFROMLIST';\r\nexport const SETCLIST = 'SETCLIST';\r\nexport const FILTEREDCOINSLIST = 'FILTEREDCOINSLIST';\r\nexport const ADDTOCLIST = 'ADDTOCLIST';\r\nexport const REQUEST_COINS_LIST = 'REQUEST_COINS_LIST';\r\nexport const RECEIVE_COINS_LIST = 'RECEIVE_COINS_LIST ';\r\nexport const ERROR_COINS_LIST = 'ERROR_COINS_LIST';\r\nexport const REQUEST_CURRENCY_LIST = 'REQUEST_CURRENCY_LIST';\r\nexport const RECEIVE_CURRENCY_LIST = 'RECEIVE_CURRENCY_LIST ';\r\nexport const ERROR_CURRENCY_LIST = 'ERROR_CURRENCY_LIST';\r\n\r\n\r\n\r\nexport const modalRoot = document.getElementById('modal-root');","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { modalRoot } from '../constants';\r\nclass Modal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // Create a div that we'll render the modal into. Because each\r\n        // Modal component has its own element, we can render multiple\r\n        // modal components into the modal container.\r\n        this.el = document.createElement('div');\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Append the element into the DOM on mount. We'll render\r\n        // into the modal container element (see the HTML tab).\r\n        modalRoot.appendChild(this.el);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // Remove the element from the DOM when we unmount\r\n        modalRoot.removeChild(this.el);\r\n    }\r\n\r\n    render() {\r\n        // Use a portal to render the children into the element\r\n        return ReactDOM.createPortal(\r\n            // Any valid React child: JSX, strings, arrays, etc.\r\n            this.props.children,\r\n            // A DOM element\r\n            this.el,\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;","import React from 'react'\r\n\r\n const  WrappedComponent = (OriginalComponent) => (props) => {\r\n        const {list, items, classN, amount} = props;\r\n        const listToMap = !list ? [] : list.map(item => items.filter(element => item.Name === element.Name));\r\n        if((items ? items.length : undefined) && !!list.length){\r\n            return <div className={classN}>\r\n                {listToMap.map(itm => {\r\n                    const [item] = itm;\r\n                    const coinFromList = amount ? list.filter(elem => elem.Name === item.Name)[0].value : '';\r\n                    return <OriginalComponent {...props} item={item} key={item.Id} value={coinFromList}/>\r\n                })}\r\n            </div>\r\n        }else {\r\n                return null;\r\n        }\r\n};\r\nexport default WrappedComponent;","import React from 'react';\r\nimport Modal from '../../Modal';\r\nimport {CRYPTO_COMPARE_URL} from '../../../constants';\r\nimport './coin.css';\r\nimport WrappedComponent from '../HOC/listTransformation';\r\n\r\nclass Coin extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {showModal: false};\r\n    }\r\n    toggleModal = () => {\r\n        this.setState({showModal: !this.state.showModal});\r\n    };\r\n    handleClick = (e) => {\r\n        e.preventDefault();\r\n        this.props.handleDelete(this.props.item.Name, true);\r\n    };\r\n\r\n    render() {\r\n        const {item, coinCarrency} = this.props;\r\n        const currencyTitle = ( coinCarrency !== undefined && coinCarrency.length ) ? coinCarrency.filter(el => el.includes(item.Name)) : null;\r\n        const modal = this.state.showModal ? (\r\n            <Modal>\r\n                <div className=\"modal\">\r\n                    <div>\r\n                        <img src={`${CRYPTO_COMPARE_URL}${item.ImageUrl}`} alt={item.CoinName} onClick={this.toggleModal}/>\r\n                        <h2>{item.CoinName}</h2>\r\n                        <button onClick={this.toggleModal}>&times;</button>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        ) : null;\r\n        return <>\r\n                <div className=\"coin\">\r\n                    <img src={`${CRYPTO_COMPARE_URL}${item.ImageUrl}`} alt={item.CoinName} onClick={this.toggleModal}/>\r\n                    <span>{ currencyTitle !== null && currencyTitle[0] !== undefined ? currencyTitle[0].slice(-3):null }</span>\r\n                    <a href=\"/\" onClick={this.handleClick}>&times;</a>\r\n                </div>\r\n                {modal}\r\n        </>;\r\n    }\r\n}\r\n\r\nexport default WrappedComponent(Coin);\r\n\r\n","import React, {Component} from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\nimport 'chartjs-plugin-annotation';\r\n\r\nclass LineChart extends Component {\r\n    render(){\r\n        const options = {\r\n            annotation: {\r\n                annotations: [{\r\n                    drawTime: 'afterDatasetsDraw',\r\n                    borderColor: 'red',\r\n                    borderDash: [2, 2],\r\n                    borderWidth: 2,\r\n                    mode: 'vertical',\r\n                    type: 'line',\r\n                    value: 10,\r\n                    scaleID: 'x-axis-0',\r\n                    label: {\r\n                        backgroundColor: 'red',\r\n                        fontFamily: 'sans-serif',\r\n                        fontSize: 10,\r\n                        fontStyle: 'bold',\r\n                        fontColor: '#fff',\r\n                        textAlign: 'center',\r\n                        xPadding: 4,\r\n                        yPadding: 4,\r\n                        cornerRadius: 4,\r\n                        position: 'top',\r\n                        enabled: true,\r\n                        content: \"Threshold\"\r\n                    }\r\n                }]\r\n            },\r\n            maintainAspectRation: false\r\n        };\r\n\r\n        return(\r\n            <Line\r\n                data={this.props.dataSet}\r\n                width={50}\r\n                height={10}\r\n                options={options}\r\n            />\r\n        )\r\n    }\r\n}\r\nexport default LineChart;","import React, { Component } from 'react'\r\nimport * as d3Axis from 'd3-axis'\r\nimport { select as d3Select } from 'd3-selection'\r\n\r\nimport './Axis.css'\r\n\r\nexport default class Axis extends Component {\r\n    componentDidMount() {\r\n        this.renderAxis()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.renderAxis()\r\n    }\r\n\r\n    renderAxis() {\r\n        const axisType = `axis${this.props.orient}`\r\n        const axis = d3Axis[axisType]()\r\n            .scale(this.props.scale)\r\n            .tickSize(-this.props.tickSize)\r\n            .tickPadding([12])\r\n            .ticks([4])\r\n\r\n        d3Select(this.axisElement).call(axis)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <g\r\n                className={`Axis Axis-${this.props.orient}`}\r\n                ref={(el) => { this.axisElement = el; }}\r\n                transform={this.props.translate}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport Axis from '../Axis'\r\n\r\nexport default ({ scales, margins, svgDimensions }) => {\r\n    const { height, width } = svgDimensions\r\n\r\n    const xProps = {\r\n        orient: 'Bottom',\r\n        scale: scales.xScale,\r\n        translate: `translate(0, ${height - margins.bottom})`,\r\n        tickSize: height - margins.top - margins.bottom,\r\n    }\r\n\r\n    const yProps = {\r\n        orient: 'Left',\r\n        scale: scales.yScale,\r\n        translate: `translate(${margins.left}, 0)`,\r\n        tickSize: width - margins.left - margins.right,\r\n    }\r\n\r\n    return (\r\n        <g>\r\n            <Axis {...xProps} />\r\n            <Axis {...yProps} />\r\n        </g>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport { scaleLinear } from 'd3-scale';\r\nimport { interpolateLab } from 'd3-interpolate';\r\n\r\nexport default class Bars extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.colorScale = scaleLinear()\r\n            .domain([0, this.props.maxValue])\r\n            .range(['#98abc5',\r\n                    '#ff8c00'])\r\n            .interpolate(interpolateLab)\r\n    }\r\n\r\n    render() {\r\n        const { scales, margins, data, svgDimensions } = this.props;\r\n        const { xScale, yScale } = scales;\r\n        const { height } = svgDimensions;\r\n\r\n        const bars = (\r\n            data.map(datum =>{\r\n                return <rect\r\n                    key={datum.title}\r\n                    x={xScale(datum.title)}\r\n                    y={yScale(datum.value)}\r\n                    height={height - margins.bottom - scales.yScale(datum.value)}\r\n                    width={xScale.bandwidth()}\r\n                    fill={this.colorScale(datum.value)}\r\n                />},\r\n            )\r\n        );\r\n\r\n        return (\r\n            <g>{bars}</g>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { scaleBand, scaleLinear } from 'd3-scale'\r\n\r\nimport Axes from '../Axes'\r\nimport Bars from '../Bars'\r\nimport ResponsiveWrapper from '../ResponsiveWrapper'\r\n\r\nclass Chart extends Component {\r\n    constructor() {\r\n        super();\r\n        this.xScale = scaleBand();\r\n        this.yScale = scaleLinear();\r\n    }\r\n    componentDidMount() {\r\n    }\r\n    render() {\r\n        const {data} = this.props;\r\n        const margins = { top: 50, right: 20, bottom: 100, left: 60 };\r\n        const svgDimensions = {\r\n            width: Math.max(this.props.parentWidth, 300),\r\n            height: 500\r\n        };\r\n\r\n        const maxValue = Math.max(...data.map(d => d.value));\r\n\r\n        const xScale = this.xScale\r\n            .padding(0.5)\r\n            .domain(data.map(d => d.title))\r\n            .range([margins.left, svgDimensions.width - margins.right]);\r\n\r\n        const yScale = this.yScale\r\n            .domain([0, maxValue])\r\n            .range([svgDimensions.height - margins.bottom, margins.top])\r\n\r\n        return (\r\n            <svg width={svgDimensions.width} height={svgDimensions.height}>\r\n                <Axes\r\n                    scales={{ xScale, yScale }}\r\n                    margins={margins}\r\n                    svgDimensions={svgDimensions}\r\n                />\r\n                <Bars\r\n                    scales={{ xScale, yScale }}\r\n                    margins={margins}\r\n                    data={data}\r\n                    maxValue={maxValue}\r\n                    svgDimensions={svgDimensions}\r\n                />\r\n            </svg>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ResponsiveWrapper(Chart)\r\n","import React from \"react\";\r\nimport './RadioButtons.css';\r\n\r\nconst RadioButtons = (props) => {\r\n\r\n    const handleChange = e => {\r\n        props.handleCurrentData(e.target.value);\r\n    };\r\n\r\n    return <div className=\"radio-buttons text-center\" onChange={handleChange}>\r\n                <input type=\"radio\" id=\"radio1\" value='day' name=\"radios\" defaultChecked={ true }/>\r\n                    <label htmlFor=\"radio1\">Days</label>\r\n                <input type=\"radio\" id=\"radio2\" value='hour' name=\"radios\"  />\r\n                    <label htmlFor=\"radio2\">Hours</label>\r\n                <input type=\"radio\" id=\"radio3\" value='minute' name=\"radios\" />\r\n                    <label htmlFor=\"radio3\">Minutes</label>\r\n           </div>;\r\n};\r\n\r\nexport default RadioButtons;\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport AddItemForm from '../Price/Form/AddItemForm';\r\nimport Coin from '../Price/Coin/Coin';\r\nimport './History.css';\r\nimport LineChart from '../Chart/LineChart';\r\nimport Chart from '../D3/Chart';\r\nimport RadioButtons from './RadioButtons/RadioButtons';\r\nimport * as moment from 'moment';\r\n\r\n\r\nclass HistoryComponent extends Component {\r\n    constructor() {\r\n        super();\r\n        this.isActBtnCoin = false;\r\n        this.isActBtnCur = false;\r\n        this.state = {\r\n            currentData: 'day',\r\n            dataDay: [],\r\n            dataHour: [],\r\n            dataMinute: [],\r\n            toggleBtn: '',\r\n            currentCurrency: '',\r\n            currentCoin: '',\r\n            currencyList: [],\r\n            list: [],\r\n            dataD3: []\r\n        };\r\n    }\r\n\r\n    fetchData() {\r\n        const {currentCoin, currentCurrency} = this.state;\r\n        fetch(`https://min-api.cryptocompare.com/data/histoday?fsym=${currentCoin}&tsym=${currentCurrency}&limit=10`)\r\n            .then(res => res.json())\r\n            .then(posts => {\r\n                if (posts) {\r\n                    const arrOfPosts = posts.Data;\r\n                    this.setState({\r\n                        dataDay: {...this.state.dataDay, [currentCoin +'-'+ currentCurrency]: arrOfPosts}\r\n                    });\r\n                }\r\n            });\r\n        fetch(`https://min-api.cryptocompare.com/data/histohour?fsym=${currentCoin}&tsym=${currentCurrency}&limit=10`)\r\n            .then(res => res.json())\r\n            .then(posts => {\r\n                if (posts) {\r\n                    const arrOfPosts = posts.Data;\r\n                    this.setState({\r\n                        dataHour: {...this.state.dataHour, [currentCoin +'-'+ currentCurrency]: arrOfPosts}\r\n                    });\r\n                }\r\n            });\r\n        fetch(`https://min-api.cryptocompare.com/data/histominute?fsym=${currentCoin}&tsym=${currentCurrency}&limit=10`)\r\n            .then(res => res.json())\r\n            .then(posts => {\r\n                if (posts) {\r\n                    const arrOfPosts = posts.Data;\r\n                    this.setState({\r\n                        dataMinute: {...this.state.dataMinute, [currentCoin +'-'+ currentCurrency]: arrOfPosts}\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`https://min-api.cryptocompare.com/data/exchange/histoday?tsym=USD&limit=10`)\r\n            .then(res => res.json())\r\n            .then(posts => posts.Data)\r\n            .then(posts => posts.map(el => ({title: moment(el.time).format('lll'), value: el.volume/10000})))\r\n            .then(posts => this.setState({dataD3: [...posts]}))\r\n    }\r\n\r\n    handleToggleBtn = (itemName) => {\r\n        this.setState({\r\n            toggleBtn: this.state.toggleBtn !== itemName ? itemName : ''\r\n        })\r\n    };\r\n    handleCurrentData = (currentData) => {\r\n        this.setState({\r\n            currentData\r\n        });\r\n    };\r\n    handleChange = (value, isCoin) => {\r\n        if (isCoin) {\r\n            this.setState((state, props) => {\r\n                this.isActBtnCur = state.currentCurrency && value;\r\n                return {currentCoin: value}\r\n            });\r\n            this.setState((state, props) => ({currentCoin: value}));\r\n        } else {\r\n            this.setState((state, props) => {\r\n                this.isActBtnCur = state.currentCoin && value;\r\n                return {currentCurrency: value}\r\n            });\r\n        }\r\n        this.isActBtnCur = !!(this.state.currentCoin && this.state.currentCurrency) ? false : true;\r\n    };\r\n    handleSubmit = event => {\r\n        const {currentCoin, currentCurrency} = this.state;\r\n        if (currentCoin && currentCurrency) {\r\n            this.setState({toggleBtn: ''});\r\n            const coin = {\r\n                Name: this.state.currentCoin\r\n            };\r\n\r\n            this.setState({currentCoin: ''});\r\n            this.setState({list: [...this.state.list, coin]});\r\n\r\n            const current = {Name: this.state.currentCurrency};\r\n            if (current.Name) {\r\n                this.setState({currentCurrency: ''});\r\n                this.setState({currencyList: [...this.state.currencyList, current]});\r\n            }\r\n            this.isActBtnCur = false;\r\n        }\r\n        event.preventDefault();\r\n        this.fetchData('day');\r\n\r\n    };\r\n    filterForDelete = (item, isCoin) => (!isCoin ? this.state.currencyList : this.state.list).filter(element => element.Name !== item);\r\n\r\n    handleDelete = (item, isCoin) => {\r\n        if (isCoin) {\r\n            const {dataDay, dataHour, dataMinute} = this.state;\r\n            const list = this.filterForDelete(item, isCoin);\r\n            const newData = data => {\r\n                const newData = {};\r\n                for(let key in data){\r\n                    if(!String(key).includes(String(item))){\r\n                        newData[key] = data[key];\r\n                    }\r\n                }\r\n                return newData;\r\n            };\r\n            this.setState({\r\n                list,\r\n                dataDay: {...newData(dataDay)},\r\n                dataHour: {...newData(dataHour)},\r\n                dataMinute: {...newData(dataMinute)}\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {currentCoin, currentCurrency, list} = this.state;\r\n        const data = this.state.currentData === 'day' ? this.state.dataDay : this.state.currentData === 'hour' ? this.state.dataHour : this.state.dataMinute;\r\n        const {coins, currencyAll} = this.props;\r\n        const arrOfData = Object.keys(data);\r\n\r\n        const backgroundColor =  [\r\n            'rgba(155,100,210,0.6)',\r\n            'rgba(90,178,255,0.6)',\r\n            'rgba(240,134,67,0.6)',\r\n            'rgba(255,105,145,0.6)',\r\n            'rgba(120,120,120,0.6)',\r\n            'rgba(5, 245, 42,0.6)',\r\n            'rgba(200, 217, 197,0.6)',\r\n            'rgba(250, 245, 137,0.6)',\r\n            'rgba(210,55,117,0.6)',\r\n            'rgba(0, 191, 255,0.6)'\r\n        ];\r\n        const borderColor = 'transparent';\r\n        const chartData = {\r\n            labels: [], //to push dynamically\r\n            datasets: []\r\n        };\r\n        arrOfData.map((item, i) => {\r\n            let dataSet = [];\r\n            if (data[item]) {\r\n                data[item].map((el, j) => {\r\n                    dataSet.push(el.high);\r\n                    chartData.labels[j] = moment(data[item][j].time).format('MMM Do, h:mm');\r\n                    return el;\r\n                })\r\n            }\r\n            chartData.datasets[i] = {label: item, backgroundColor: backgroundColor.splice(-1).concat(backgroundColor), borderColor, data: dataSet};\r\n            return item;\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 posts  text-center\">\r\n                            <h1>History</h1>\r\n                        </div>\r\n                        {arrOfData.length ? <RadioButtons handleCurrentData={this.handleCurrentData}/> : null}\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 text-right hidden-button\">\r\n                            <AddItemForm onSubmit={this.handleSubmit}\r\n                                         value={currentCoin}\r\n                                         onChange={this.handleChange}\r\n                                         coins={coins}\r\n                                         list={list}\r\n                                         isCoin={true}\r\n                                         disabled={!this.isActBtnCoin}>Pick your coins.</AddItemForm>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <AddItemForm onSubmit={this.handleSubmit}\r\n                                         value={currentCurrency}\r\n                                         onChange={this.handleChange}\r\n                                         coins={currencyAll}\r\n                                         list={[]}\r\n                                         isCoin={false}\r\n                                         disabled={!this.isActBtnCur}>Pick your coins.</AddItemForm>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <Coin handleDelete={this.handleDelete}\r\n                                  list={list}\r\n                                  items={coins}\r\n                                  classN=\"coins\"\r\n                                  coinCarrency={arrOfData}/>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    {arrOfData.length ?<LineChart dataSet={chartData} />: null}\r\n\r\n                    <div className=\"App-chart-container\">\r\n                        <h2>Historical Daily Exchange Volume</h2>\r\n                        <Chart data={this.state.dataD3}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    coins: state.coins.coins,\r\n    currencyAll: state.currencyAll,\r\n    currentCurrency: state.currentCurrency,\r\n    currentCoin: state.currentCoin,\r\n    currencyList: state.currencyList\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nconst History = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(HistoryComponent);\r\n\r\nexport default History;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst propTypes = {\r\n    items: PropTypes.array.isRequired,\r\n    onChangePage: PropTypes.func.isRequired,\r\n    initialPage: PropTypes.number,\r\n    pageSize: PropTypes.number\r\n};\r\n\r\nconst defaultProps = {\r\n    initialPage: 1,\r\n    pageSize: 6\r\n};\r\n\r\nclass Pagination extends React.Component {\r\n\r\n    componentWillMount() {\r\n        // set page if items array isn't empty\r\n        if (this.props.items && this.props.items.length) {\r\n            this.setPage(this.props.initialPage);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        // reset page if items array has changed\r\n        if (this.props.items !== prevProps.items) {\r\n            this.setPage(this.props.initialPage);\r\n        }\r\n    }\r\n\r\n    setPage = (page) => {\r\n        const { items, pageSize } = this.props;\r\n        // var pager = this.state.pager;\r\n        let pager = this.props.pager;\r\n\r\n        if (page < 1 || page > pager.totalPages) {\r\n            return;\r\n        }\r\n\r\n        // get new pager object for specified page\r\n        pager = this.getPager(items.length, page, pageSize);\r\n\r\n        // get new page of items from items array\r\n        const pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1);\r\n\r\n        // update state\r\n\r\n        // this.setState({ pager: pager });\r\n        this.props.handlePager(pager);\r\n\r\n\r\n        // call change page function in parent component\r\n        this.props.onChangePage(pageOfItems);\r\n    };\r\n\r\n    getPager(totalItems, currentPage, pageSize) {\r\n        // default to first page\r\n        currentPage = currentPage || 1;\r\n\r\n        // default page size is 10\r\n        pageSize = pageSize || 10;\r\n\r\n        // calculate total pages\r\n        var totalPages = Math.ceil(totalItems / pageSize);\r\n\r\n        var startPage, endPage;\r\n        if (totalPages <= 10) {\r\n            // less than 10 total pages so show all\r\n            startPage = 1;\r\n            endPage = totalPages;\r\n        } else {\r\n            // more than 10 total pages so calculate start and end pages\r\n            if (currentPage <= 6) {\r\n                startPage = 1;\r\n                endPage = 10;\r\n            } else if (currentPage + 4 >= totalPages) {\r\n                startPage = totalPages - 9;\r\n                endPage = totalPages;\r\n            } else {\r\n                startPage = currentPage - 5;\r\n                endPage = currentPage + 4;\r\n            }\r\n        }\r\n\r\n        // calculate start and end item indexes\r\n        const startIndex = (currentPage - 1) * pageSize;\r\n        const endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\r\n\r\n        // create an array of pages to ng-repeat in the pager control\r\n        const pages = [...Array((endPage + 1) - startPage).keys()].map(i => startPage + i);\r\n\r\n        // return object with all pager properties required by the view\r\n        return {\r\n            totalItems: totalItems,\r\n            currentPage: currentPage,\r\n            pageSize: pageSize,\r\n            totalPages: totalPages,\r\n            startPage: startPage,\r\n            endPage: endPage,\r\n            startIndex: startIndex,\r\n            endIndex: endIndex,\r\n            pages: pages\r\n        };\r\n    }\r\n\r\n    render() {\r\n        // const pager = this.state.pager;\r\n        const pager = this.props.pager;\r\n\r\n        if (!pager.pages || pager.pages.length <= 1) {\r\n            // don't display pager if there is only 1 page\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <ul className=\"pagination\">\r\n                <li className={pager.currentPage === 1 ? 'disabled' : ''}>\r\n                    <a onClick={(e) => {e.preventDefault(); return this.setPage(1, e)}} href=\"/\">First</a>\r\n                </li>\r\n                <li className={pager.currentPage === 1 ? 'disabled' : ''}>\r\n                    <a  onClick={(e) => {e.preventDefault(); return this.setPage(pager.currentPage - 1)}} href=\"/\">Previous</a>\r\n                </li>\r\n                {pager.pages.map((page, index) =>\r\n                    <li key={index} className={pager.currentPage === page ? 'active' : ''}>\r\n                        <a onClick={(e) =>{e.preventDefault(); return  this.setPage(page)}} href=\"/\">{page}</a>\r\n                    </li>\r\n                )}\r\n                <li className={pager.currentPage === pager.totalPages ? 'disabled' : ''}>\r\n                    <a onClick={(e) =>{e.preventDefault(); return  this.setPage(pager.currentPage + 1)}} href=\"/\">Next</a>\r\n                </li>\r\n                <li className={pager.currentPage === pager.totalPages ? 'disabled' : ''}>\r\n                    <a onClick={(e) =>{e.preventDefault(); return this.setPage(pager.totalPages)}} href=\"/\">Last</a>\r\n                </li>\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nPagination.propTypes = propTypes;\r\nPagination.defaultProps = defaultProps;\r\nexport default Pagination;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass SearchInput extends Component {\r\n    static propTypes = {\r\n        value: PropTypes.string.isRequired,\r\n        onChange: PropTypes.func.isRequired\r\n    };\r\n    state = {\r\n        isValid: true,\r\n    };\r\n\r\n    handleSearchChange = (event) => {\r\n        const searchTerm = event.target.value;\r\n        const { onChange } = this.props;\r\n        onChange(searchTerm);\r\n\r\n    };\r\n\r\n\r\n\r\n    // handleSearchChange = event => {\r\n    //\r\n    //\r\n    //     const is_array = obj => {\r\n    //         if(obj.constructor.toString().indexOf('Array') === -1) {\r\n    //             return false;\r\n    //         }\r\n    //         return true;\r\n    //     };\r\n    //\r\n    //\r\n    //     const strip_tags = input => {\r\n    //         let newInput;\r\n    //         if (input) {\r\n    //             const tags = /<[^>]*>/g;\r\n    //             if (!is_array(input)) {\r\n    //                 newInput = input.replace(tags,'');\r\n    //             }\r\n    //             else {\r\n    //                 newInput = input.map(item => item.replace(tags,''));\r\n    //             }\r\n    //             return newInput;\r\n    //         }\r\n    //         return false;\r\n    //     };\r\n    //\r\n    //     const searchTerm = strip_tags(event.target.value)+'';\r\n    //     const { onChange } = this.props;\r\n    //\r\n    //     if(searchTerm !== undefined) {\r\n    //         onChange(searchTerm);\r\n    //     }\r\n    // };\r\n\r\n    render() {\r\n        const { value } = this.props;\r\n        const { isValid } = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                {!isValid && <p>Search term should have at least 3 character</p>}\r\n                <label htmlFor=\"search coinAmount_label\" className=\"search\">\r\n                    <span className=\"coinName\">Search</span>\r\n                    <input\r\n                        className=\"coinAmount_input\"\r\n                        type=\"text\"\r\n                        name=\"search\"\r\n                        id=\"search\"\r\n                        placeholder=\"search...\"\r\n                        value={value}\r\n                        onChange={this.handleSearchChange}\r\n                    />\r\n                </label>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchInput;","import React from 'react';\r\n\r\nconst ErrorSpan = ({children}) => <span className=\"warning alarm\">{children}</span>;\r\n\r\n\r\nexport default ErrorSpan;\r\n\r\n","import React from 'react';\r\nimport Pagination from './Pagination';\r\nimport './Pagination/index.css';\r\nimport SearchInput  from '../Coins/SearchInput';\r\nimport Span  from '../Price/CoinAmount/ErrorSpan';\r\n\r\nclass NewsComponent extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            search: '',\r\n            articles: [],\r\n            filteredArticles: [],\r\n            pageOfItems: [],\r\n            pager: { pager: {} },\r\n            isValid: true\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        fetch('https://min-api.cryptocompare.com/data/v2/news/?lang=EN')\r\n            .then(res => res.json())\r\n            .then(posts => this.setState({\r\n                articles: Object.keys(posts.Data).map(key => posts.Data[key]),\r\n                filteredArticles: Object.keys(posts.Data).map(key => posts.Data[key])\r\n            }));\r\n    }\r\n\r\n    onChangePage = pageOfItems => {\r\n        this.setState({pageOfItems: pageOfItems});\r\n    };\r\n    \r\n    // componentDidUpdate(prevProps, prevState) {\r\n    // }\r\n    filterListBySearchTerm = (list, searchTerm) => (\r\n        list.filter(data => data.title.toLowerCase().includes(searchTerm.toLowerCase()))\r\n    );\r\n\r\n    handleSearchChange = search => {\r\n        const { articles } = this.state;\r\n        const filteredArticles = this.filterListBySearchTerm(articles, search);\r\n        if(filteredArticles.length <= 0){\r\n            this.setState({\r\n                isValid: false\r\n            });\r\n            return;\r\n        };\r\n\r\n        this.setState({\r\n            isValid: true,\r\n            search,\r\n            filteredArticles\r\n        });\r\n    };\r\n    handlePager = pager => {\r\n        this.setState({ pager });\r\n    };\r\n    render() {\r\n        const { search, filteredArticles, pageOfItems } = this.state;\r\n        return (\r\n            <div className=\"position-relative d-inline\">\r\n                {!this.state.isValid ? <Span>No results found for this query</Span> : null}\r\n                <SearchInput value={ search } onChange={ this.handleSearchChange } />\r\n                <div className=\"mycontainer\">\r\n                    <div className=\"text-center\">\r\n                        <h1>News</h1>\r\n                        <Pagination\r\n                            items={filteredArticles}\r\n                            onChangePage={this.onChangePage}\r\n                            handlePager={this.handlePager}\r\n                            pager={this.state.pager}/>\r\n                        <div className=\"posts\">\r\n                            {pageOfItems.map(post =>\r\n                                <div key={post.id} className=\"post\">\r\n                                    <h2><a href={post.guid} target=\"_blank\" rel=\"noopener noreferrer\">{post.title}</a></h2>\r\n                                    <div className=\"newsItem\">\r\n                                        <div className=\"newsImgBox\">\r\n                                            <img src={post.imageurl} alt=\"\"/>\r\n                                        </div>\r\n                                        <div className=\"newsTestBox\">\r\n                                            <p>{new Date(post.published_on).toLocaleDateString()}</p>\r\n                                            <p>{post.source}</p>\r\n                                            <p>{post.body}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                    <h2>\r\n                        -{this.state.pager.currentPage? this.state.pager.currentPage : null}-\r\n                    </h2>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewsComponent;","import React, {Component, Fragment} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {CRYPTO_COMPARE_URL} from '../../../constants';\r\n\r\nclass Card extends Component {\r\n    render() {\r\n        const {card} = this.props || {};\r\n        return (\r\n            <Fragment>\r\n                <div className=\"flip-container col-sm-6 col-md-3 country-card\">\r\n                    <div\r\n                        className=\"flipper country-card-container  rounded  mx-2 my-3 d-flex flex-row align-items-center p-0 \">\r\n                        <div className=\"front w-100 border-gray border-right p-2 bg-white rounded-left\">\r\n                            <span className=\"country-name text-dark d-block font-weight-bold\">\r\n                                  <h2><a href={`/coins/${card.Name}:1$USD&EUR&UAH&RUB`}\r\n                                         rel=\"noopener noreferrer\">{card.CoinName}</a></h2>\r\n                            </span>\r\n                            <img\r\n                                src={`${CRYPTO_COMPARE_URL}${card.ImageUrl}`}\r\n                                className=\"d-block w-100 h-auto\"\r\n                                alt={card.CoinName}/>\r\n                        </div>\r\n                        <div\r\n                            className=\"back w-100 position-relative border-gray border-right p-2 bg-white rounded-left\">\r\n                            <a href={`/coins/${card.Name}:1$USD&EUR&UAH&RUB`}\r\n                               rel=\"noopener noreferrer\">\r\n                                <span className=\"country-name text-dark d-block font-weight-bold\">\r\n                                <h2>{card.CoinName}</h2>\r\n                                <p>Algorithm: {card.Algorithm}</p>\r\n                                <p>Full name: {card.FullName}</p>\r\n                                <p>PreMined value: {card.PreMinedValue}</p>\r\n                                <p>Smart contract address: {card.SmartContractAddress}</p>\r\n                                <p>Sort order: {card.SortOrder}</p>\r\n                                <p>Total coin supply: {card.TotalCoinSupply}</p>\r\n                                <p>Total Ccoins free float: {card.TotalCoinsFreeFloat}</p>\r\n                            </span>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nCard.propTypes = {\r\n    card: PropTypes.shape({\r\n        CoinName: PropTypes.string.isRequired,\r\n        Name: PropTypes.string.isRequired,\r\n        Id: PropTypes.string.isRequired\r\n\r\n    }).isRequired\r\n};\r\nexport default Card;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst propTypes = {\r\n    items: PropTypes.array.isRequired,\r\n    onChangePage: PropTypes.func.isRequired,\r\n    initialPage: PropTypes.number,\r\n    pageSize: PropTypes.number\r\n};\r\n\r\nconst defaultProps = {\r\n    initialPage: 1,\r\n    pageSize: 20\r\n};\r\n\r\nclass Pagination extends React.Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     // this.state = { pager: {} };\r\n    // }\r\n\r\n    componentWillMount() {\r\n        // set page if items array isn't empty\r\n        if (this.props.items && this.props.items.length) {\r\n            this.setPage(this.props.initialPage);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        // reset page if items array has changed\r\n        if (this.props.items !== prevProps.items) {\r\n            this.setPage(this.props.initialPage);\r\n        }\r\n    }\r\n\r\n    setPage = (page) => {\r\n        const { items, pageSize } = this.props;\r\n        // var pager = this.state.pager;\r\n        let pager = this.props.pager;\r\n\r\n        if (page < 1 || page > pager.totalPages) {\r\n            return;\r\n        }\r\n\r\n        // get new pager object for specified page\r\n        pager = this.getPager(items.length, page, pageSize);\r\n\r\n        // get new page of items from items array\r\n        const pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1);\r\n\r\n        // update state\r\n\r\n        // this.setState({ pager: pager });\r\n        this.props.handlePager(pager);\r\n\r\n\r\n        // call change page function in parent component\r\n        this.props.onChangePage(pageOfItems);\r\n    };\r\n\r\n    getPager(totalItems, currentPage, pageSize) {\r\n        // default to first page\r\n        currentPage = currentPage || 1;\r\n\r\n        // default page size is 10\r\n        pageSize = pageSize || 10;\r\n\r\n        // calculate total pages\r\n        var totalPages = Math.ceil(totalItems / pageSize);\r\n\r\n        var startPage, endPage;\r\n        if (totalPages <= 10) {\r\n            // less than 10 total pages so show all\r\n            startPage = 1;\r\n            endPage = totalPages;\r\n        } else {\r\n            // more than 10 total pages so calculate start and end pages\r\n            if (currentPage <= 6) {\r\n                startPage = 1;\r\n                endPage = 10;\r\n            } else if (currentPage + 4 >= totalPages) {\r\n                startPage = totalPages - 9;\r\n                endPage = totalPages;\r\n            } else {\r\n                startPage = currentPage - 5;\r\n                endPage = currentPage + 4;\r\n            }\r\n        }\r\n\r\n        // calculate start and end item indexes\r\n        const startIndex = (currentPage - 1) * pageSize;\r\n        const endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\r\n\r\n        // create an array of pages to ng-repeat in the pager control\r\n        const pages = [...Array((endPage + 1) - startPage).keys()].map(i => startPage + i);\r\n\r\n        // return object with all pager properties required by the view\r\n        return {\r\n            totalItems: totalItems,\r\n            currentPage: currentPage,\r\n            pageSize: pageSize,\r\n            totalPages: totalPages,\r\n            startPage: startPage,\r\n            endPage: endPage,\r\n            startIndex: startIndex,\r\n            endIndex: endIndex,\r\n            pages: pages\r\n        };\r\n    }\r\n\r\n    render() {\r\n        // const pager = this.state.pager;\r\n        const pager = this.props.pager;\r\n\r\n        if (!pager.pages || pager.pages.length <= 1) {\r\n            // don't display pager if there is only 1 page\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <ul className=\"pagination\">\r\n                <li className={pager.currentPage === 1 ? 'disabled' : ''}>\r\n                    <a onClick={(e) => {e.preventDefault(); return this.setPage(1, e)}} href=\"/\">First</a>\r\n                </li>\r\n                <li className={pager.currentPage === 1 ? 'disabled' : ''}>\r\n                    <a  onClick={(e) => {e.preventDefault(); return this.setPage(pager.currentPage - 1)}} href=\"/\">Previous</a>\r\n                </li>\r\n                {pager.pages.map((page, index) =>\r\n                    <li key={index} className={pager.currentPage === page ? 'active' : ''}>\r\n                        <a onClick={(e) =>{e.preventDefault(); return  this.setPage(page)}} href=\"/\">{page}</a>\r\n                    </li>\r\n                )}\r\n                <li className={pager.currentPage === pager.totalPages ? 'disabled' : ''}>\r\n                    <a onClick={(e) =>{e.preventDefault(); return  this.setPage(pager.currentPage + 1)}} href=\"/\">Next</a>\r\n                </li>\r\n                <li className={pager.currentPage === pager.totalPages ? 'disabled' : ''}>\r\n                    <a onClick={(e) =>{e.preventDefault(); return this.setPage(pager.totalPages)}} href=\"/\">Last</a>\r\n                </li>\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nPagination.propTypes = propTypes;\r\nPagination.defaultProps = defaultProps;\r\nexport default Pagination;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Card from './Pagination/Card';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport './Coins.css';\r\nimport Pagination from './Pagination';\r\nimport './Pagination/index.css';\r\nimport SearchInput  from '../Coins/SearchInput';\r\nimport Span  from '../Price/CoinAmount/ErrorSpan';\r\n\r\nclass CoinsComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            coins: [...this.props.coins],\r\n            search: '',\r\n            filteredCoins: [...this.props.coins],\r\n            pageOfItems: [],\r\n            pager: { pager: {} },\r\n            isValid: true\r\n        };\r\n    }\r\n\r\n    onChangePage = pageOfItems => {\r\n        this.setState({pageOfItems: pageOfItems});\r\n    };\r\n\r\n    filterListBySearchTerm = (list, searchTerm) => (\r\n        list.filter(coin => coin.CoinName.toLowerCase().includes(searchTerm.toLowerCase()))\r\n    );\r\n\r\n    componentDidMount() {\r\n        setTimeout(()=>{\r\n            this.setState({\r\n                coins: this.props.coins,\r\n                filteredCoins: this.props.coins\r\n            });\r\n        }, 1500);\r\n    };\r\n\r\n    handleSearchChange = search => {\r\n        const { coins } = this.state;\r\n        const filteredCoins = this.filterListBySearchTerm(coins, search);\r\n        if(filteredCoins.length <= 0){\r\n            this.setState({\r\n                isValid: false\r\n            });\r\n            return;\r\n        }\r\n        this.setState({\r\n            isValid: true,\r\n            search,\r\n            filteredCoins\r\n        });\r\n    };\r\n\r\n    handlePager = pager => {\r\n        this.setState({ pager });\r\n    };\r\n\r\n    render() {\r\n        const { search, filteredCoins } = this.state;\r\n        return (\r\n            <div className=\"container mb-5\">\r\n                {filteredCoins.length > 0 ? (\r\n                    <>\r\n                <div className=\"position-relative d-inline\">{!this.state.isValid ? <Span>No results found for this query</Span> : null}\r\n                    <SearchInput value={ search } onChange={ this.handleSearchChange } />\r\n                </div>\r\n\r\n                    <div className=\"row d-flex flex-row\">\r\n                        <div\r\n                            className=\"w-100 px-4 py-5 d-flex flex-row flex-wrap align-items-center justify-content-between mycontainer\">\r\n                            <div className=\"d-flex flex-row align-items-center\">\r\n                                <h2 className=''>\r\n                                    Coins: {filteredCoins.length > 0 ? filteredCoins.length : null}\r\n                                </h2>\r\n                            </div>\r\n                            <div className=\"d-flex flex-row py-4 align-items-center\">\r\n                                <Pagination\r\n                                    items={filteredCoins}\r\n                                    onChangePage={this.onChangePage}\r\n                                    handlePager={this.handlePager}\r\n                                    pager={this.state.pager}/>\r\n                            </div>\r\n                        </div>\r\n                        {this.state.pageOfItems.map(card => (\r\n                            <Card key={card.Id} card={card}/>\r\n                        ))}\r\n                    </div>\r\n\r\n                <div className=\"text-center\">\r\n                    <h2>\r\n                        -{this.state.pager.currentPage? this.state.pager.currentPage : null}-\r\n                    </h2>\r\n                </div>\r\n                    </>)\r\n                : <div className=\"loader\"><img src=\"./loader.gif\" alt=\"CryptoCurrency\"/></div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    coins: state.coins.coins,\r\n    filteredCoinsList: state.filteredCoinsList\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n};\r\n\r\nconst Coins = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(CoinsComponent);\r\n\r\nexport default Coins;","import React, {Component} from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\nimport 'chartjs-plugin-annotation';\r\n\r\nclass BarChart extends Component {\r\n    render(){\r\n        const options = {\r\n            annotation: {\r\n                annotations: [{\r\n                    drawTime: 'afterDatasetsDraw',\r\n                    borderColor: 'red',\r\n                    borderDash: [2, 2],\r\n                    borderWidth: 2,\r\n                    mode: 'vertical',\r\n                    type: 'line',\r\n                    value: 10,\r\n                    scaleID: 'x-axis-0',\r\n                    label: {\r\n                        backgroundColor: 'red',\r\n                        fontFamily: 'sans-serif',\r\n                        fontSize: 10,\r\n                        fontStyle: 'bold',\r\n                        fontColor: '#fff',\r\n                        textAlign: 'center',\r\n                        xPadding: 4,\r\n                        yPadding: 4,\r\n                        cornerRadius: 4,\r\n                        position: 'top',\r\n                        enabled: true,\r\n                        content: \"Threshold\"\r\n                    }\r\n                }]\r\n            },\r\n            maintainAspectRation: false\r\n        };\r\n        const data = {\r\n            labels: [...this.props.labelsSet],\r\n            datasets: [{\r\n                label: \"Bar chart\",\r\n                backgroundColor:[\r\n                    'rgba(155,100,210,0.6)',\r\n                    'rgba(90,178,255,0.6)',\r\n                    'rgba(240,134,67,0.6)',\r\n                    'rgba(255,105,145,0.6)',\r\n                    'rgba(120,120,120,0.6)',\r\n                    'rgba(250,55,197,0.6)'\r\n                ],\r\n                borderColor: 'transparent',\r\n                data: [...this.props.dataSet],\r\n            }]\r\n        };\r\n        return(\r\n            <Bar\r\n                data={data}\r\n                width={50}\r\n                height={10}\r\n                options={options}\r\n            />\r\n        )\r\n    }\r\n}\r\nexport default BarChart;","import React, { Component } from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\n\r\n\r\nclass PieChart extends Component\r\n{\r\n    render(){\r\n        const options = {\r\n            maintainAspectRatio: false,\r\n            annotation: {\r\n                annotations: [{\r\n                    drawTime: 'afterDatasetsDraw',\r\n                    borderColor: 'red',\r\n                    borderDash: [2, 2],\r\n                    borderWidth: 2,\r\n                    mode: 'vertical',\r\n                    type: 'line',\r\n                    value: 10,\r\n                    scaleID: 'x-axis-0',\r\n                    backgroundColor:[\r\n                        'rgba(255,105,145,0.6)',\r\n                        'rgba(155,100,210,0.6)',\r\n                        'rgba(90,178,255,0.6)',\r\n                        'rgba(240,134,67,0.6)',\r\n                        'rgba(120,120,120,0.6)',\r\n                        'rgba(250,55,197,0.6)'\r\n                    ],\r\n                    label: {\r\n                        backgroundColor: 'red',\r\n                        fontFamily: 'sans-serif',\r\n                        fontSize: 10,\r\n                        fontStyle: 'bold',\r\n                        fontColor: '#fff',\r\n                        textAlign: 'center',\r\n                        xPadding: 4,\r\n                        yPadding: 4,\r\n                        cornerRadius: 4,\r\n                        position: 'top',\r\n                        enabled: true,\r\n                        content: \"Threshold\"\r\n                    }\r\n                }]\r\n            },\r\n            maintainAspectRation: false\r\n        };\r\n        const data = {\r\n            labels: [...this.props.labelsSet],\r\n            datasets: [{\r\n                label: \"Pie chart\",\r\n                backgroundColor:[\r\n                    'rgba(155,100,210,0.6)',\r\n                    'rgba(255,105,145,0.6)',\r\n                    'rgba(90,178,255,0.6)',\r\n                    'rgba(240,134,67,0.6)',\r\n                    'rgba(120,120,120,0.6)',\r\n                    'rgba(250,55,197,0.6)'\r\n                ],\r\n                borderColor: 'transparent',\r\n                data: [...this.props.dataSet],\r\n            }]\r\n        };\r\n        return(\r\n            <Pie\r\n                data={data}\r\n                width={50}\r\n                height={10}\r\n                options={options}\r\n            />\r\n        )\r\n    }\r\n}\r\nexport default  PieChart;","import React, {Component} from 'react';\r\nimport {Doughnut } from 'react-chartjs-2';\r\nimport 'chartjs-plugin-annotation';\r\n\r\nclass DoughnutChart extends Component {\r\n    render(){\r\n        const options = {\r\n            annotation: {\r\n                annotations: [{\r\n                    drawTime: 'afterDatasetsDraw',\r\n                    borderColor: 'red',\r\n                    borderDash: [2, 2],\r\n                    borderWidth: 2,\r\n                    mode: 'vertical',\r\n                    type: 'line',\r\n                    value: 10,\r\n                    scaleID: 'x-axis-0',\r\n                    label: {\r\n                        backgroundColor: 'red',\r\n                        fontFamily: 'sans-serif',\r\n                        fontSize: 10,\r\n                        fontStyle: 'bold',\r\n                        fontColor: '#fff',\r\n                        textAlign: 'center',\r\n                        xPadding: 4,\r\n                        yPadding: 4,\r\n                        cornerRadius: 4,\r\n                        position: 'top',\r\n                        enabled: true,\r\n                        content: \"Threshold\"\r\n                    }\r\n                }]\r\n            },\r\n            maintainAspectRation: false\r\n        };\r\n        const data = {\r\n            labels: [...this.props.labelsSet],\r\n            datasets: [{\r\n                label: \"Doughnut chart\",\r\n                backgroundColor:[\r\n                    'rgba(90,178,255,0.6)',\r\n                    'rgba(255,105,145,0.6)',\r\n                    'rgba(120,120,120,0.6)',\r\n                    'rgba(155,100,210,0.6)',\r\n                    'rgba(240,134,67,0.6)',\r\n                    'rgba(250,55,197,0.6)'\r\n                ],\r\n                borderColor: 'transparent',\r\n                data: [...this.props.dataSet],\r\n            }]\r\n        };\r\n        return(\r\n            <Doughnut\r\n                data={data}\r\n                width={50}\r\n                height={10}\r\n                options={options}\r\n            />\r\n        )\r\n    }\r\n}\r\nexport default DoughnutChart;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport AddItemForm from '../Price/Form/AddItemForm';\r\nimport Coin from '../Price/Coin/Coin';\r\nimport './Exchange.css';\r\nimport BarChart from '../Chart/BarChart';\r\nimport PieChart from '../Chart/PieChart';\r\nimport DoughnutChart from '../Chart/DoughnutChart';\r\n\r\n\r\nclass ExchangeComponent extends Component {\r\n    constructor() {\r\n        super();\r\n        this.isActBtnCoin = false;\r\n        this.isActBtnCur = false;\r\n        this.state = {\r\n            data: [],\r\n            toggleBtn: '',\r\n            currentCurrency: '',\r\n            currentCoin: '',\r\n            currencyList: [],\r\n            list: []\r\n\r\n        };\r\n    }\r\n\r\n    fetchData() {\r\n        const {currentCoin, currentCurrency} = this.state;\r\n        fetch(`https://min-api.cryptocompare.com/data/top/exchanges/full?fsym=${currentCoin}&tsym=${currentCurrency}`)\r\n            .then(res => res.json())\r\n            .then(posts => {\r\n                if (posts) {\r\n                    const arrOfPosts = posts.Data.Exchanges;\r\n                    this.setState({\r\n                        data: [...this.state.data, {[currentCoin +'-'+ currentCurrency]: arrOfPosts}]\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    handleToggleBtn = (itemName) => {\r\n        this.setState({\r\n            toggleBtn: this.state.toggleBtn !== itemName ? itemName : ''\r\n        })\r\n    };\r\n    handleChange = (value, isCoin) => {\r\n        if (isCoin) {\r\n            this.setState((state, props) => {\r\n                this.isActBtnCur = state.currentCurrency && value;\r\n                return {currentCoin: value}\r\n            });\r\n            this.setState((state, props) => ({currentCoin: value}));\r\n        } else {\r\n            this.setState((state, props) => {\r\n                this.isActBtnCur = state.currentCoin && value;\r\n                return {currentCurrency: value}\r\n            });\r\n        }\r\n        this.isActBtnCur = !!(this.state.currentCoin && this.state.currentCurrency) ? false : true;\r\n    };\r\n    handleSubmit = (event) => {\r\n        const {currentCoin, currentCurrency} = this.state;\r\n        if (currentCoin && currentCurrency) {\r\n            this.setState({toggleBtn: ''});\r\n            const coin = {\r\n                Name: this.state.currentCoin\r\n            };\r\n\r\n            this.setState({currentCoin: ''});\r\n            this.setState({list: [...this.state.list, coin]});\r\n\r\n            const current = {Name: this.state.currentCurrency};\r\n            if (current.Name) {\r\n                this.setState({currentCurrency: ''});\r\n                this.setState({currencyList: [...this.state.currencyList, current]});\r\n            }\r\n            this.isActBtnCur = false;\r\n        }\r\n        event.preventDefault();\r\n        this.fetchData();\r\n    };\r\n    filterForDelete = (item, isCoin) => (!isCoin ? this.state.currencyList : this.state.list).filter(element => element.Name !== item);\r\n\r\n    handleDelete = (item, isCoin) => {\r\n        if (isCoin) {\r\n            const list = this.filterForDelete(item, isCoin);\r\n            this.setState({\r\n                list,\r\n                data: this.state.data.filter(el => !Object.keys(el)[0].toUpperCase().includes(item.toUpperCase()))\r\n            });\r\n            \r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {data, currentCoin, currentCurrency, list} = this.state;\r\n        const {coins, currencyAll} = this.props;\r\n        const arrOfData = data.map(item => Object.keys(item)[0]);\r\n        return (\r\n            <div>\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 posts  text-center\">\r\n                            <h1>Exchange</h1>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 text-right hidden-button\">\r\n                            <AddItemForm onSubmit={this.handleSubmit}\r\n                                         value={currentCoin}\r\n                                         onChange={this.handleChange}\r\n                                         coins={coins}\r\n                                         list={list}\r\n                                         isCoin={true}\r\n                                         disabled={!this.isActBtnCoin}>Pick your coins.</AddItemForm>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <AddItemForm onSubmit={this.handleSubmit}\r\n                                         value={currentCurrency}\r\n                                         onChange={this.handleChange}\r\n                                         coins={currencyAll}\r\n                                         list={[]}\r\n                                         isCoin={false}\r\n                                         disabled={!this.isActBtnCur}>Pick your coins.</AddItemForm>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <Coin handleDelete={this.handleDelete}\r\n                                  list={list}\r\n                                  items={coins}\r\n                                  classN=\"coins\"\r\n                                  coinCarrency={arrOfData}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2 text-center text-dark font-weight-bold\">Market</div>\r\n                        <div className=\"col-md-2 text-center text-dark font-weight-bold \">\r\n                            From\r\n                        </div>\r\n                        <div className=\"col-md-2 text-center text-dark font-weight-bold\">To\r\n                        </div>\r\n                        <div className=\"col-md-2 text-center text-dark font-weight-bold\">\r\n                            Price\r\n                        </div>\r\n                        <div className=\"col-md-2 text-center text-dark font-weight-bold\">\r\n                            Volume 24 hour\r\n                        </div>\r\n                        <div className=\"col-md-2 text-center text-dark font-weight-bold\">Volume 24 hour\r\n                            To\r\n                        </div>\r\n                    </div>\r\n                    {arrOfData.map((item, i) => {\r\n                        const labelsSet  = [];\r\n                        const dataSet = [];\r\n                        if (data[i][item]) {\r\n                            return <div className=\"row-bottom\" key={item}>{data[i][item].map(el => {\r\n                                labelsSet.push(el.MARKET);\r\n                                dataSet.push(el.LASTVOLUMETO);\r\n                                return (<div className=\"row border-bottom\" key={el.LASTTRADEID}>\r\n                                            <div className=\"col-md-2 text-center border-right\">{el.MARKET || 'no data'}</div>\r\n                                            <div className=\"col-md-2 text-center border-right\">{el.FROMSYMBOL || 'no data'}</div>\r\n                                            <div className=\"col-md-2 text-center border-right\">{el.TOSYMBOL || 'no data'}</div>\r\n                                            <div className=\"col-md-2 text-center border-right\">{el.PRICE || 'no data'}</div>\r\n                                            <div className=\"col-md-2 text-center border-right\">{el.VOLUME24HOUR || 'no data'}</div>\r\n                                            <div className=\"col-md-2 text-center\">{el.LASTVOLUMETO || 'no data'}</div>\r\n                                        </div>)\r\n\r\n                            })}\r\n                                    {i%3 ? <BarChart dataSet={dataSet} labelsSet={labelsSet}/> :\r\n                                     i%2 ? <PieChart dataSet={dataSet} labelsSet={labelsSet}/> : <DoughnutChart dataSet={dataSet} labelsSet={labelsSet}/>}\r\n                            </div>\r\n\r\n                        }else{\r\n                            return <div className=\"row border-bottom row-bottom\" key={item}>\r\n                                    <div className=\"col-md-12 text-center text-tomato font-weight-bold text-uppercase\">{item} no data</div>\r\n                            </div>\r\n                        }\r\n                    })}\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    coins: state.coins.coins,\r\n    currencyAll: state.currencyAll,\r\n    currentCurrency: state.currentCurrency,\r\n    currentCoin: state.currentCoin,\r\n    currencyList: state.currencyList\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nconst Exchange = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(ExchangeComponent);\r\n\r\nexport default Exchange;\r\n","import React, {Component} from 'react';\r\nimport WrappedComponent from '../HOC/listTransformation';\r\nimport './coinAmount.css';\r\n\r\nclass CoinAmount extends Component{ //item, value, Spn, handleCoinsChangeAmount\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isValid: true\r\n        };\r\n    }\r\n    handleChange = (e) => {\r\n        const { item, handleCoinsChangeAmount } = this.props;\r\n        const re = /^[0-9.\\b]+$/;\r\n        if (e.target.value === '' || re.test(e.target.value)) {\r\n            handleCoinsChangeAmount(item.Name, e.target.value);\r\n            this.setState({\r\n                isValid: true\r\n            });\r\n        } else {\r\n            handleCoinsChangeAmount(item.Name, '0');\r\n            this.setState({\r\n                isValid: false\r\n            });\r\n        }\r\n        e.preventDefault();\r\n    };\r\n    render() {\r\n        const {item, value, Spn} = this.props;\r\n        return <div className=\"coinAmount\">\r\n            <label className=\"coinAmount_label\"><span className=\"coinName\">{item.Name}:</span>\r\n                <input\r\n                    onChange={this.handleChange}\r\n                    defaultValue={value}\r\n                    className=\"coinAmount_input\"/>\r\n                {!this.state.isValid ? Spn : null}\r\n            </label>\r\n        </div>;\r\n    }\r\n\r\n};\r\n\r\nexport default WrappedComponent(CoinAmount);\r\n\r\n","import { REQUEST_CURRENCY_LIST, RECEIVE_CURRENCY_LIST, ERROR_CURRENCY_LIST, CRYPTO_COMPARE_URL_CUR } from \"../constants\";\r\nimport { takeEvery, call, put } from 'redux-saga/effects';\r\n\r\nexport const requestCurrencyListAction = (currensyNames, nameToUpper) => ({\r\n    type: REQUEST_CURRENCY_LIST,\r\n    currensyNames,\r\n    nameToUpper\r\n});\r\n\r\nexport const receiveCurrencyListAction = currencyRate => ({\r\n    type: RECEIVE_CURRENCY_LIST,\r\n    payload: currencyRate,\r\n});\r\n\r\nexport const errorCurrencyListAction = (err) => ({\r\n    type: ERROR_CURRENCY_LIST,\r\n});\r\n\r\nexport function* getCurrencyList(action) {\r\n    try {\r\n        const responce = yield call(\r\n            () => fetch(`${CRYPTO_COMPARE_URL_CUR}${action.nameToUpper}&tsyms=${action.currensyNames}`).then(responce => responce.json()),\r\n        );\r\n        yield put(receiveCurrencyListAction(responce['RAW'][action.nameToUpper]));\r\n    } catch (err) {\r\n        yield put(errorCurrencyListAction(err));\r\n    }\r\n};\r\n\r\nexport default function* currencySaga() {\r\n    yield takeEvery(REQUEST_CURRENCY_LIST, getCurrencyList);\r\n}","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport WrappedComponent from '../HOC/listTransformation';\r\nimport './currencyAmount.css';\r\nimport {requestCurrencyListAction} from '../../../AC/sagaCurrency';\r\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\r\n\r\nclass CurrencyAmountComponent extends Component {\r\n    _isMounted = false;\r\n\r\n    static defaultProps = {\r\n        currensy: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        const currencyNames = this.props.currencyAll.map(item => item.Name.toUpperCase()).join(',');\r\n        const nameToUpper = this.props.item.Name.toUpperCase();\r\n        if (this._isMounted)\r\n            this.props.requestCurrencyListAction(currencyNames, nameToUpper);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    handleToggleBtn = (e) => {\r\n        e.preventDefault();\r\n        this.props.handleToggleBtn(this.props.item.Name);\r\n    };\r\n\r\n    render() {\r\n        const {item, value, currencyList, currencyRate} = this.props;\r\n        return <div className=\"coinAmount\">\r\n            <div className=\"coinAmount_text\"><span>{item.Name}:</span>\r\n                <ul>\r\n                    {currencyList.map(el => {\r\n                            const currencySimbol = el.Name === 'USD'? <sup style={{color: 'green'}}>$</sup> : el.Name === 'EUR'? <sup style={{color: 'blue'}}>&euro;</sup> : el.Name === 'RUB'? <sup style={{color: 'brown'}}>&#8381;</sup> : <sup style={{color: 'gold'}}>&#8372;</sup>;\r\n                            return (<div key={el.Name}>\r\n                                    <li >{(value * (currencyRate[el.Name] ? currencyRate[el.Name]['PRICE'] : 0)).toFixed(2)} {currencySimbol}</li>\r\n                                    {this.props.toggleBtn === this.props.item.Name ?\r\n                                        <ReactCSSTransitionGroup\r\n                                            transitionName=\"coinInfo\"\r\n                                            transitionAppear={true}\r\n                                            transitionAppearTimeout={500}\r\n                                            transitionEnter={false}\r\n                                            transitionLeave={false}>\r\n                                            <div className=\"coinAmount_info\">\r\n                                                <ul>\r\n                                                    <li><span>Market:</span> {!!currencyRate[el.Name].MARKET?currencyRate[el.Name].MARKET : null}</li>\r\n                                                    <li><span>LastMarket:</span> {currencyRate[el.Name].LASTMARKET}</li>\r\n                                                    <li><span>High 24 hour:</span> {currencyRate[el.Name].HIGH24HOUR.toFixed(6)}</li>\r\n                                                    <li><span>Open 24 hour:</span> {currencyRate[el.Name].OPEN24HOUR.toFixed(6)}</li>\r\n                                                    <li><span>Price:</span> {currencyRate[el.Name].PRICE.toFixed(6)} {((currencyRate[el.Name].OPEN24HOUR - currencyRate[el.Name].PRICE) < 0) ? <span style={{color: 'green'}}>&#8657;</span> : <span style={{color: 'red'}}>&#8659;</span>}</li>\r\n\r\n                                                </ul>\r\n                                            </div>\r\n                                        </ReactCSSTransitionGroup>\r\n                                        :\r\n                                        null}\r\n                                </div>\r\n                            )\r\n                        }\r\n                    )}\r\n                </ul>\r\n                <a href=\"./\" onClick={this.handleToggleBtn} className=\"toggleArrow\">\r\n                    {this.props.toggleBtn === this.props.item.Name ? <span>&and;</span> : <span>&or;</span>}\r\n                </a>\r\n            </div>\r\n\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    currencyRate: state.currencyRate.currencyRate,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    requestCurrencyListAction,\r\n};\r\n\r\nconst CurrencyAmount = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(WrappedComponent(CurrencyAmountComponent));\r\n\r\nexport default CurrencyAmount;\r\n\r\n","import React from 'react';\r\nimport './currency.css';\r\nimport WrappedComponent from '../HOC/listTransformation';\r\n\r\nconst Currency = ({item, handleDelete}) => {\r\n\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        handleDelete(item.Name);\r\n    };\r\n    return <div className=\"coin\">\r\n        <h3>{item.Name}</h3>\r\n        <a href=\"/\" onClick={handleClick}>&times;</a>\r\n    </div>;\r\n};\r\n\r\nexport default WrappedComponent(Currency);\r\n\r\n","import React from 'react';\r\nclass ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { error: null, errorInfo: null };\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        // Catch errors in any components below and re-render with error message\r\n        this.setState({\r\n            error: error,\r\n            errorInfo: errorInfo\r\n        })\r\n        // You can also log error messages to an error reporting service here\r\n    }\r\n\r\n    render() {\r\n        if (this.state.errorInfo) {\r\n            // Error path\r\n            return (\r\n                <div>\r\n                    <h2>Something went wrong.</h2>\r\n                    <details style={{ whiteSpace: 'pre-wrap' }}>\r\n                        {this.state.error && this.state.error.toString()}\r\n                        <br />\r\n                        {this.state.errorInfo.componentStack}\r\n                    </details>\r\n                </div>\r\n            );\r\n        }\r\n        // Normally, just render children\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import { INCREMENT, CURRENCY, CURRENTCURRENCY, CURRENTCOIN, SETLIST, FILTEREDCOINSLIST, ADDTOLIST, ADDTOCLIST, SETCLIST,\r\n    ERROR_COINS_LIST, RECEIVE_COINS_LIST, REQUEST_COINS_LIST  } from '../constants';\r\nimport {CRYPTO_COMPARE_URL_ALL} from '../constants';\r\nimport {COINS_NUM} from '../constants';\r\n\r\nexport function increment(data) {\r\n    return {\r\n        type: INCREMENT,\r\n        payload: data\r\n    }\r\n}\r\nexport function setCurrencyNameAll(data) {\r\n    return {\r\n        type: CURRENCY,\r\n        payload: data\r\n    }\r\n}\r\nexport function setCurrentCurrency(data) {\r\n    return {\r\n        type: CURRENTCURRENCY,\r\n        payload: data\r\n    }\r\n}\r\nexport function setCurrentCoin(data) {\r\n    return {\r\n        type: CURRENTCOIN,\r\n        payload: data\r\n    }\r\n}\r\nexport function setCoinsList(data) {\r\n    return {\r\n        type: SETLIST,\r\n        payload: data\r\n    }\r\n}\r\nexport function setFilteredCoinsList(data) {\r\n    return {\r\n        type: FILTEREDCOINSLIST,\r\n        payload: data\r\n    }\r\n}\r\nexport function addToCoinsList(data) {\r\n    return {\r\n        type: ADDTOLIST,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport function setCurrencyList(data) {\r\n    return {\r\n        type: SETCLIST,\r\n        payload: data\r\n    }\r\n}\r\nexport function addToCurrencyList(data) {\r\n    return {\r\n        type: ADDTOCLIST,\r\n        payload: data\r\n    }\r\n}\r\n\r\n// export const boundIncrement = data => dispatch => dispatch(increment(data));\r\n\r\nexport const requestCoinsListAction = () => ({\r\n    type: REQUEST_COINS_LIST\r\n});\r\n\r\nexport const receiveCoinsListAction = coins => ({\r\n    type: RECEIVE_COINS_LIST,\r\n    payload: coins\r\n});\r\n\r\nexport const errorCoinsListAction = (err) => ({\r\n    type: ERROR_COINS_LIST,\r\n    payload: err\r\n});\r\n\r\nexport const getCoinsList = () => (dispatch) => {\r\n    dispatch(requestCoinsListAction());\r\n        fetch(CRYPTO_COMPARE_URL_ALL)\r\n            .then(responce => responce.json())\r\n            .then(responce => dispatch(receiveCoinsListAction(Object.keys(responce.Data).slice(0, COINS_NUM).map(key => responce.Data[key]))))\r\n            .catch(err => dispatch(errorCoinsListAction(err)));\r\n};","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Coin from \"./Coin/Coin\";\r\nimport CoinAmount from \"./CoinAmount/CoinAmount\";\r\nimport CurrencyAmount from \"./CurrencyAmount/CurrencyAmount\";\r\nimport Currency from \"./Currency/Currency\";\r\nimport Span from \"./CoinAmount/ErrorSpan\";\r\nimport AddItemForm from \"./Form/AddItemForm\";\r\nimport ErrorBoundary from \"../ErrorBoundary\";\r\nimport {setCurrencyNameAll, setCurrentCurrency, setCurrentCoin, addToCoinsList, setCoinsList, setCurrencyList, addToCurrencyList} from \"../../AC\";\r\nimport './price.css';\r\n\r\nclass PriceComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.isActBtnCoin = true;\r\n        this.isActBtnCur = true;\r\n\r\n        // ------------ localStorage ------------- //\r\n        // const list = localStorage.getItem('list')?JSON.parse(localStorage.getItem('list')):[];\r\n        // const currencyList = localStorage.getItem('currencyList')?JSON.parse(localStorage.getItem('currencyList')):[];\r\n        // ------------ localStorage ------------- //\r\n\r\n        const split = this.props.match.params.list.split('$');\r\n        const coinsList = split[0] ? split[0].split('&').map(item => ({\r\n                                                            Name: item.split(':')[0],\r\n                                                            value: parseInt(item.split(':')[1])\r\n                                                        })) : [];\r\n        const currencyList = split[1] ? split[1].split('&').map(item => ({Name: item})) : [];\r\n        this.props.setCoinsList(coinsList);\r\n        this.props.setCurrencyList(currencyList);\r\n        this.state={ toggleBtn: '' };\r\n    }\r\n    static propTypes = {\r\n        setCurrencyNameAll: PropTypes.func.isRequired,\r\n        currencyAll: PropTypes.array.isRequired,\r\n        coinsList: PropTypes.array.isRequired,\r\n        currencyList: PropTypes.array.isRequired,\r\n        setCurrentCoin: PropTypes.func.isRequired,\r\n        currentCoin: PropTypes.string.isRequired\r\n    };\r\n    static defaultProps = {\r\n\r\n        test: <span style={{fontSize: 'smaller'}}>select your coin.</span>\r\n    };\r\n    // ------------ localStorage ------------- //\r\n    setLocalState = () => {\r\n        const localList = [...this.props.coinsList];\r\n        const localCurList = [...this.props.currencyList];\r\n        localStorage.setItem('coinsList', JSON.stringify(localList));\r\n        localStorage.setItem('currencyList', JSON.stringify(localCurList));\r\n    };\r\n    getLocalState = () => {\r\n        const coinsList = this.props.coinsList.map(item => `${item.Name}:${item.value}`).join('&');\r\n        const currencyList = this.props.currencyList.map(item => `${item.Name}`).join('&');\r\n        let allList;\r\n        if(coinsList || currencyList){\r\n            allList = `/coins/${coinsList}$${currencyList}`\r\n        }else{\r\n            allList='';\r\n        }\r\n        return allList;\r\n    };\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        // ------------ localStorage ------------- //\r\n        this.setLocalState();\r\n        // ------------ localStorage ------------- //\r\n\r\n        if (this.props.location.pathname !== this.getLocalState()) {\r\n            const url = this.getLocalState();\r\n            window.history.pushState({id: 'localhost'}, 'Cripto', url);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    componentDidUpdate() {\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const url = this.getLocalState();\r\n        this.props.handleSetState(url);\r\n    }\r\n    handleToggleBtn = (itemName) => {\r\n        this.setState({\r\n            toggleBtn: this.state.toggleBtn !== itemName ? itemName : ''\r\n        })\r\n    };\r\n    handleChange = (value, isCoin) => {\r\n        if (isCoin) {\r\n            this.isActBtnCoin = !value;\r\n            this.props.setCurrentCoin(value);\r\n        } else {\r\n            this.isActBtnCur = !value;\r\n            this.props.setCurrentCurrency(value);\r\n        }\r\n    };\r\n    handleSubmit = (event, isCoin) => {\r\n        if (isCoin) {\r\n            this.setState({toggleBtn: ''});\r\n            const coin = {\r\n                Name: this.props.currentCoin,\r\n                value: 0\r\n            };\r\n            if (this.props.currentCoin) {\r\n                this.props.setCurrentCoin('');\r\n                this.props.addToCoinsList(coin);\r\n            }\r\n            this.isActBtnCoin = true;\r\n        } else {\r\n            const current = {Name: this.props.currentCurrency};\r\n            if (current.Name) {\r\n                this.props.setCurrentCurrency('');\r\n                this.props.addToCurrencyList(current);\r\n            }\r\n            this.isActBtnCur = true;\r\n        }\r\n        event.preventDefault();\r\n    };\r\n\r\n    filterForDelete = (item, isCoin) => (!isCoin ? this.props.currencyList : this.props.coinsList).filter(element => element.Name !== item);\r\n\r\n    handleDelete = (item, isCoin) => {\r\n        if (isCoin) {\r\n            const coinsList = this.filterForDelete(item, isCoin);\r\n            this.props.setCoinsList(coinsList);\r\n        } else {\r\n            const currencyList = this.filterForDelete(item);\r\n            this.props.setCurrencyList(currencyList);\r\n        }\r\n    };\r\n\r\n    handleCoinsChangeAmount = (name, value) => {\r\n        let coinsList = [...this.props.coinsList];\r\n        coinsList = coinsList.map(item => {\r\n            if (item.Name === name) item.value = value;\r\n            return item;\r\n        });\r\n        this.props.setCoinsList(coinsList);\r\n    };\r\n\r\n    render() {\r\n        const {coins, currencyAll, currentCoin, currentCurrency, coinsList, currencyList} = this.props;\r\n        return (\r\n            <div className=\"coinsWrapper\">\r\n                <div className=\"coinContainer\">\r\n\r\n                    <h2>Coins: {this.props.test}</h2>\r\n\r\n                    <ErrorBoundary>\r\n\r\n                        <AddItemForm onSubmit={this.handleSubmit}\r\n                              value={currentCoin}\r\n                              onChange={this.handleChange}\r\n                              coins={coins}\r\n                              list={coinsList}\r\n                              isCoin={true}\r\n                              disabled={this.isActBtnCoin}>Pick your coins.</AddItemForm>\r\n\r\n                        <Coin handleDelete={this.handleDelete}\r\n                              list={coinsList}\r\n                              items={coins}\r\n                              classN=\"coins\" />\r\n\r\n                        <CoinAmount list={coinsList}\r\n                                    items={coins}\r\n                                    classN=\"coinsAmounts\"\r\n                                    handleCoinsChangeAmount={this.handleCoinsChangeAmount}\r\n                                    amount={true}\r\n                                    Spn={<Span>Only numbers allowed!</Span>}/>\r\n\r\n                    </ErrorBoundary>\r\n\r\n                </div>\r\n                <div className=\"coinContainer\">\r\n                    <h2>Currency: <span style={{fontSize: 'smaller'}}>select your currency.</span></h2>\r\n                    <ErrorBoundary>\r\n                        <AddItemForm onSubmit={this.handleSubmit}\r\n                              value={currentCurrency}\r\n                              onChange={this.handleChange}\r\n                              coins={currencyAll}\r\n                              list={currencyList}\r\n                              disabled={this.isActBtnCur}>Pick your currency.</AddItemForm>\r\n\r\n\r\n                        <Currency handleDelete={this.handleDelete}\r\n                             classN=\"coins\"\r\n                             list={currencyList}\r\n                             items={currencyAll}/>\r\n\r\n                        <CurrencyAmount\r\n                                   list={coinsList}\r\n                                   items={coins}\r\n                                   classN=\"coinsAmounts\"\r\n                                   currencyList={currencyList}\r\n                                   currencyAll={currencyAll}\r\n                                   handleToggleBtn = {this.handleToggleBtn}\r\n                                   toggleBtn = {this.state.toggleBtn}\r\n                                   amount={true}/>\r\n                    </ErrorBoundary>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    currencyAll: state.currencyAll,\r\n    currentCurrency: state.currentCurrency,\r\n    currentCoin: state.currentCoin,\r\n    coinsList: state.coinsList,\r\n    currencyList: state.currencyList\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    setCurrencyNameAll,\r\n    setCurrentCurrency,\r\n    setCurrentCoin,\r\n    setCoinsList,\r\n    addToCoinsList,\r\n    setCurrencyList,\r\n    addToCurrencyList\r\n};\r\n\r\nconst Price = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(PriceComponent);\r\n\r\nexport default Price;\r\n\r\n","import React from 'react';\r\n\r\nconst ForOFor = () => (\r\n    <h1 className=\"text-center\">\r\n        404\r\n    </h1>\r\n);\r\n\r\nexport default ForOFor;","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './TopMenu.css';\r\n\r\nclass TopMenu extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"top-menu\">\r\n                <ul className=\"menu-main\">\r\n                    <li>\r\n                        <NavLink to=\"/\" activeClassName=\"active\" exact>Coins</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to={this.props.url} activeClassName=\"active\">Price</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/history\" activeClassName=\"active\">History</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/exchange\" activeClassName=\"active\">Exchange</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/news\" activeClassName=\"active\">News</NavLink>\r\n                    </li>\r\n\r\n                </ul>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\nexport default TopMenu;\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport History from './components/History/History.jsx';\r\nimport NewsComponent from './components/News';\r\nimport Coins from './components/Coins/Coins.jsx';\r\nimport Exchange from './components/Exchange/Exchange.jsx';\r\nimport Price from './components/Price/Price.jsx';\r\nimport ForOFor from './components/404.jsx'\r\nimport './App.css';\r\nimport TopMenu from './components/TopMenu/TopMenu';\r\nimport { connect } from 'react-redux';\r\nimport { getCoinsList } from './AC';\r\n\r\n\r\nclass AppComponent extends Component {\r\n    _isMounted = false;\r\n    constructor(props) {\r\n        super(props);\r\n        const coinsList = localStorage.getItem('coinsList')?JSON.parse(localStorage.getItem('coinsList')):[];\r\n        const strCoinsList = coinsList.map(item => `${item.Name}:${item.value}`).join('&');\r\n        const currencyList = localStorage.getItem('currencyList')?JSON.parse(localStorage.getItem('currencyList')):[];\r\n        const strCurrencyList = currencyList.map(item => `${item.Name}`).join('&');\r\n        const url = (coinsList !== '' && currencyList !== '') ? `/coins/${strCoinsList}$${strCurrencyList}` : '/coins/42:1?USD';\r\n        this.state = {\r\n            url\r\n        }\r\n    }\r\n    handleSetState = (url) => {\r\n        if(url !== this.state.url)\r\n            this.setState({url});\r\n    };\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        this.props.getCoinsList();\r\n    }\r\n    componentWillUnmount(){\r\n        this._isMounted = false;\r\n    }\r\n    render() {\r\n        const repo = `/${window.location.pathname.split('/')[1]}/`;\r\n        return (\r\n            <BrowserRouter base-name={ repo }>\r\n                <Route\r\n                    render={({location}) => (\r\n                        <>\r\n                        <TopMenu url={this.state.url} />\r\n                        <TransitionGroup>\r\n                            <CSSTransition key={location.key} classNames=\"fade\" timeout={500}>\r\n                                <Switch location={location}>\r\n                                    <Route exact path=\"/\" component={Coins}/>\r\n                                    <Route path=\"/history\" component={History}/>\r\n                                    <Route path=\"/exchange\" component={Exchange}/>\r\n                                    <Route path=\"/news\" component={NewsComponent}/>\r\n                                    <Route path=\"/coins/:list\" component={(props) => <Price {...props} coins={this.props.coins} handleSetState={this.handleSetState}/>} exact />\r\n                                    <Route component={ForOFor}/>\r\n                                </Switch>\r\n                            </CSSTransition>\r\n                        </TransitionGroup>\r\n                        </>\r\n                    )}\r\n                />\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    coins: state.coins.coins,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    getCoinsList,\r\n};\r\n\r\nconst App = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AppComponent);\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { CURRENCY } from '../constants';\r\n\r\nconst initialCurrency = [\r\n    {Name: 'USD', Id: '0'},\r\n    {Name: 'EUR', Id: '1'},\r\n    {Name: 'UAH', Id: '2'},\r\n    {Name: 'RUB', Id: '3'}\r\n];\r\n\r\n\r\nexport default (currencyAll = initialCurrency, action) => {\r\n    const {type, payload} = action;\r\n    switch (type) {\r\n        case CURRENCY: return (payload instanceof Array) ? [...payload] : [payload];\r\n        default: return currencyAll;\r\n    }\r\n}\r\n","import { SETLIST, ADDTOLIST, DELFROMLIST } from '../constants';\r\n\r\nconst initialSetList = [];\r\n\r\nexport default (coinsList = initialSetList, action) => {\r\n    const {type, payload} = action;\r\n    switch (type) {\r\n        case SETLIST: return (payload instanceof Array) ? [...payload] : [payload];\r\n        case ADDTOLIST: return [...coinsList, payload];\r\n        case DELFROMLIST: return [...payload];\r\n        default: return coinsList;\r\n    }\r\n}","import { FILTEREDCOINSLIST } from '../constants';\r\n\r\nconst initialFilteredSetList = [];\r\n\r\nexport default (filteredCoinsList = initialFilteredSetList, action) => {\r\n    const {type, payload} = action;\r\n    switch (type) {\r\n        case FILTEREDCOINSLIST: return payload;\r\n\r\n        default: return filteredCoinsList;\r\n    }\r\n}","import { RECEIVE_COINS_LIST, REQUEST_COINS_LIST, ERROR_COINS_LIST } from '../constants';\r\n\r\nconst initialState = {\r\n    coins: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case REQUEST_COINS_LIST:\r\n            return {\r\n                ...state,\r\n                coins: []\r\n            };\r\n        case RECEIVE_COINS_LIST:\r\n            return {\r\n                ...state,\r\n                coins: action.payload\r\n            };\r\n        case ERROR_COINS_LIST:\r\n            return {\r\n                ...state,\r\n                coins: []\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { SETCLIST, ADDTOCLIST } from '../constants';\r\n\r\nconst initialSetCList = [];\r\n\r\nexport default (currencyList = initialSetCList, action) => {\r\n    const {type, payload} = action;\r\n    switch (type) {\r\n        case SETCLIST: return (payload instanceof Array) ? [...payload] : [payload];\r\n        case ADDTOCLIST: return [...currencyList, payload];\r\n        default: return currencyList;\r\n    }\r\n}","import { RECEIVE_CURRENCY_LIST, REQUEST_CURRENCY_LIST, ERROR_CURRENCY_LIST } from '../constants';\r\n\r\nconst initialState = {\r\n    currencyRate: {},\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case REQUEST_CURRENCY_LIST:\r\n            return {\r\n                ...state,\r\n                currencyRate: {}\r\n            };\r\n        case RECEIVE_CURRENCY_LIST:\r\n            return {\r\n                ...state,\r\n                currencyRate: {...action.payload}\r\n            };\r\n        case ERROR_CURRENCY_LIST:\r\n            return {\r\n                ...state,\r\n                currencyRate: {}\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport counter from './counter';\r\nimport currencyAll from './currencyAll';\r\nimport currentCurrency from './currentCurrency';\r\nimport currentCoin from './currentCoin';\r\nimport coinsList from './setCoinsList';\r\nimport filteredCoinsList from './setFilteredCoinsList';\r\nimport coins from './getCoins';\r\nimport currencyList from './setCurrencyList';\r\nimport currencyRate from './getCurrency';\r\n\r\nexport default combineReducers({\r\n    counter,\r\n    currencyAll,\r\n    currentCurrency,\r\n    currentCoin,\r\n    coinsList,\r\n    filteredCoinsList,\r\n    currencyList,\r\n    coins,\r\n    currencyRate\r\n});","import { INCREMENT } from '../constants';\r\n\r\nconst initialCount = 0;\r\n\r\nexport default (count =  initialCount, action) => {\r\n    const {type} = action;\r\n    switch (type) {\r\n        case INCREMENT: return count + 1;\r\n        default: return count;\r\n    }\r\n}","import { CURRENTCURRENCY } from '../constants';\r\n\r\nconst initialCurrentCurrency = '';\r\n\r\n\r\nexport default (currentCurrency = initialCurrentCurrency, action) => {\r\n    const {type, payload} = action;\r\n    switch (type) {\r\n        case CURRENTCURRENCY: return payload;\r\n        default: return currentCurrency;\r\n    }\r\n}\r\n","import { CURRENTCOIN } from '../constants';\r\n\r\nconst initialValue = '';\r\n\r\n\r\nexport default (list = initialValue, action) => {\r\n    const {type, payload} = action;\r\n    switch (type) {\r\n        case CURRENTCOIN: return payload;\r\n        default: return list;\r\n    }\r\n}","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport reducers from '../redusers';\r\nimport thunk from 'redux-thunk';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport currencySaga from '../AC/sagaCurrency';\r\n\r\nconst composeEnhancers =\r\n    typeof window === 'object' &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n            // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n        }) : compose;\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst enhancer = composeEnhancers(\r\n    applyMiddleware(thunk),\r\n    applyMiddleware(sagaMiddleware)\r\n    // other store enhancers if any\r\n);\r\n\r\nconst store = createStore(\r\n    reducers,\r\n    enhancer,\r\n);\r\n\r\nsagaMiddleware.run(currencySaga);\r\n\r\nwindow.store = store;\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}